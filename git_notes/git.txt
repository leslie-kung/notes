git 生成密钥：

1、放弃本地所有修改，回退到上一个版本
	git reset --hard HEAD  --hard 表示放弃本地所有变更

2、查看提交日志
	git log
	-p 选项展开显示每次提交的内容差异
	-2 则仅显示最近的两次更新
	--stat，仅显示简要的增改行数统计
	--pretty=oneline 将每个提交放在一行显示
	--pretty=format:"%h - %an, %ar : %s"
	--pretty=format:"%h - %an, %ar : %s" --graph (--graph	可以看到开头多出一些 ASCII 字符串表示的简单图形)
		选项	 说明
		%H		提交对象（commit）的完整哈希字串
		%h		提交对象的简短哈希字串
		%T		树对象（tree）的完整哈希字串
		%t		树对象的简短哈希字串
		%P		父对象（parent）的完整哈希字串
		%p		父对象的简短哈希字串
		%an		作者（author）的名字
		%ae		作者的电子邮件地址
		%ad		作者修订日期（可以用 -date= 选项定制格式）
		%ar		作者修订日期，按多久以前的方式显示
		%cn		提交者(committer)的名字
		%ce		提交者的电子邮件地址
		%cd		提交日期
		%cr		提交日期，按多久以前的方式显示
		%s		提交说明

		选项 说明
		-p 按补丁格式显示每个更新之间的差异。
		--stat 显示每次更新的文件修改统计信息。
		--shortstat 只显示 --stat 中最后的行数修改添加移除统计。
		--name-only 仅在提交信息后显示已修改的文件清单。
		--name-status 显示新增、修改、删除的文件清单。
		--abbrev-commit 仅显示 SHA-1 的前几个字符，而非所有的 40 个字符。
		--relative-date 使用较短的相对时间显示（比如，“2 weeks ago”）。
		--graph 显示 ASCII 图形表示的分支合并历史。
		--pretty 使用其他格式显示历史提交信息。可用的选项包括 oneline，short，full，fuller 和 format（后跟指定格式）。

3、放弃已经commit，但是没有push的文件

4、回退到某一个版本
	git reset --hard 某一个提交的hash值 (git log 可以查看到)  --hard 表示放弃本地所有变更

5、清除所有未跟踪文件，包括纳入ignored的文件
	git clean -dxf
	git clean -n 显示将要删除的文件和目录
	git clean -df eds-core/storeroot/default/pathroot/crawl/projects/mobile/yidong/hubei/

6、撤销对已经修改文件的更改
	git checkout filename

7、修改add的文件为未跟踪状态
	git rm --cached filename

8、git commit操作之前文件的三种状态
	Untracked files  未跟踪 需要 git add filename 来添加跟踪 (一般是新添加文件)
	Changes not staged for commit  表明文件已经修改，但是还没有放入暂存区域，也就是没生成快照 (一般是对已经跟踪的文件做了修改，可以用git checkout filename来放弃修改)
	Changes to be committed  可以进行commit的文件

9、取消已经暂存的文件
	git reset HEAD filename

10、修改最后一次提交
	git commit -m 'initial commit'
	git add forgotten_file
	git commit --amend

11、查看某次提交文件的改动
	git show  某次提交的hash值  filename

12、查看合并和未合并的分支
	git branch --no-merged
	git branch --merged

13、查看配置信息
	git config --list


14、git 修改.gitignore 文件生效方法
git rm -r --cached .  #清除缓存
git add . #重新trace file
git commit -m "update .gitignore" #提交和注释
git push origin master #可选，如果需要同步到remote上的话